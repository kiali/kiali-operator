# All of this is ultimately to obtain the kiali_route_url

# We need to auto-discover the Kiali Route URL because the OAuthClient (for redirect URIs) and ConsoleLink resources need it.
# Note that the user can override redirect URIs in auth.openshift.redirect_uris so this route URL will
# be ignored in the OAuthClient template in that case.

- name: Get the Kiali Route on OpenShift, which may require waiting some time for it to startup
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: "{{ kiali_vars.deployment.instance_name }}"
    namespace: "{{ kiali_vars.deployment.namespace }}"
  register: kiali_route_raw
  until:
  - kiali_route_raw['resources'] is defined
  - kiali_route_raw['resources'][0] is defined
  - kiali_route_raw['resources'][0]['status'] is defined
  - kiali_route_raw['resources'][0]['status']['ingress'] is defined
  - kiali_route_raw['resources'][0]['status']['ingress'][0] is defined
  - kiali_route_raw['resources'][0]['status']['ingress'][0]['host'] is defined
  retries: 30
  delay: 10
  when:
  - is_openshift == True

- name: Set Kiali TLS Termination from OpenShift route
  set_fact:
    kiali_route_tls_termination: "{{ kiali_route_raw['resources'][0]['spec']['tls']['termination'] }}"
  when:
  - is_openshift == True

- name: Detect HTTP Kiali OpenShift route protocol
  set_fact:
    kiali_route_protocol: "http"
  when:
  - is_openshift == True
  - kiali_route_tls_termination == ""

- name: Detect HTTPS Kiali OpenShift route protocol
  set_fact:
    kiali_route_protocol: "https"
  when:
  - is_openshift == True
  - kiali_route_tls_termination != ""

- name: Create URL for Kiali OpenShift route
  set_fact:
    kiali_route_url: "{{ kiali_route_protocol }}://{{ kiali_route_raw['resources'][0]['status']['ingress'][0]['host'] }}"
  when:
  - is_openshift == True