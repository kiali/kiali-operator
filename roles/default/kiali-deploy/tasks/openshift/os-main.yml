- name: Create Kiali objects on OpenShift
  include_tasks: process-resource.yml
  vars:
    process_resource_cluster: "openshift"
    role_namespace: "{{ kiali_vars.deployment.namespace }}"
  loop:
  - serviceaccount
  - configmap
  - cabundle
  - "{{ 'role-viewer' if kiali_vars.deployment.view_only_mode|bool == True else 'role' }}"
  - rolebinding
  - deployment
  - service
  loop_control:
    loop_var: process_resource_item
  when:
  - is_openshift == True

- name: Create Route on OpenShift if enabled
  include_tasks: process-resource.yml
  vars:
    process_resource_cluster: "openshift"
    role_namespace: "{{ kiali_vars.deployment.namespace }}"
  loop:
  - route
  loop_control:
    loop_var: process_resource_item
  when:
  - is_openshift == True
  - kiali_vars.deployment.ingress_enabled|bool == True

- name: Delete Route on OpenShift if disabled
  k8s:
    state: absent
    api_version: "route.openshift.io/v1"
    kind: "Route"
    namespace: "{{ kiali_vars.deployment.namespace }}"
    name: "kiali"
  when:
  - is_openshift == True
  - kiali_vars.deployment.ingress_enabled|bool == False

- name: Create additional Kiali roles on OpenShift
  include_tasks: process-additional-roles.yml
  vars:
    process_resource_cluster: "openshift"
  loop: "{{ kiali_vars.deployment.accessible_namespaces }}"
  loop_control:
    loop_var: role_namespace
  when:
  - is_openshift == True
  - '"**" not in kiali_vars.deployment.accessible_namespaces'

- name: Get the Kiali Route URL
  include: openshift/os-get-kiali-route-url.yml
  when:
  - is_openshift == True

- name: Process OpenShift OAuth client
  k8s:
    definition: "{{ lookup('template', 'templates/openshift/oauth.yaml') }}"
  when:
  - is_openshift == True
  - kiali_vars.auth.strategy == "openshift"

- name: Delete all ConsoleLinks for namespaces that are no longer accessible
  k8s:
    state: absent
    api_version: console.openshift.io/v1
    kind: ConsoleLink
    name: "kiali-namespace-{{ inaccessible_namespace }}"
  loop: "{{ no_longer_accessible_namespaces }}"
  loop_control:
    loop_var: inaccessible_namespace
  when:
  - is_openshift == True
  - no_longer_accessible_namespaces is defined

- name: Process OpenShift Console Links
  k8s:
    definition: "{{ lookup('template', 'templates/openshift/console-links.yaml') }}"
  vars:
    # When accessible_namespaces=**, the kiali.io/member-of label is not set, but maistra.io/member-of are always present
    namespaces: "{{ lookup('k8s', api_version='v1', kind='Namespace', label_selector=('maistra.io/member-of=' + kiali_vars.istio_namespace)) | default({}) | json_query('[].metadata.name') if '**' in all_accessible_namespaces else all_accessible_namespaces }}"
  when:
  - is_openshift == True
