apiVersion: apps/v1
kind: Deployment
metadata:
  name: kiali
  namespace: {{ kiali_vars.deployment.namespace }}
  labels:
    app: kiali
    version: {{ kiali_vars.deployment.version_label }}
  annotations:
    kiali.io/api-spec: https://kiali.io/api
    kiali.io/api-type: rest
spec:
  replicas: {{ kiali_vars.deployment.replicas }}
  selector:
    matchLabels:
      app: kiali
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      name: kiali
      labels:
        app: kiali
        version: {{ kiali_vars.deployment.version_label }}
{% if kiali_vars.deployment.pod_labels|length > 0 %}
        {{ kiali_vars.deployment.pod_labels | to_nice_yaml(indent=0) | trim | indent(8) }}
{% endif %}
      annotations:
{% if kiali_vars.server.metrics_enabled|bool == True %}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ kiali_vars.server.metrics_port }}"
{% else %}
        prometheus.io/scrape: "false"
        prometheus.io/port: null
{% endif %}
        kiali.io/runtimes: go,kiali
        operator.kiali.io/last-updated: "{{ deployment_last_updated }}"
{% if kiali_vars.deployment.pod_annotations|length > 0 %}
        {{ kiali_vars.deployment.pod_annotations | to_nice_yaml(indent=0) | trim | indent(8) }}
{% endif %}
    spec:
      serviceAccount: kiali-service-account
{% if kiali_vars.deployment.priority_class_name != "" %}
      priorityClassName: "{{ kiali_vars.deployment.priority_class_name }}"
{% endif %}
{% if kiali_vars.deployment.image_pull_secrets | default([]) | length > 0 %}
      imagePullSecrets:
{% for n in kiali_vars.deployment.image_pull_secrets %}
      - name: {{ n }}
{% endfor %}
{% endif %}
      containers:
      - image: {{ kiali_vars.deployment.image_name }}:{{ kiali_vars.deployment.image_version }}
        imagePullPolicy: {{ kiali_vars.deployment.image_pull_policy }}
        name: kiali
        command:
        - "/opt/kiali/kiali"
        - "-config"
        - "/kiali-configuration/config.yaml"
        - "-v"
        - "{{ kiali_vars.deployment.verbose_mode }}"
        ports:
          - name: api-port
            containerPort: {{ kiali_vars.server.port }}
{% if kiali_vars.server.metrics_enabled|bool == True %}
          - name: http-metrics
            containerPort: {{ kiali_vars.server.metrics_port }}
{% endif %}
        readinessProbe:
          httpGet:
            path: {{ kiali_vars.server.web_root | regex_replace('\\/$', '') }}/healthz
            port: api-port
            scheme:  {{ 'HTTP' if kiali_vars.identity.cert_file == "" else 'HTTPS' }}
          initialDelaySeconds: 5
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: {{ kiali_vars.server.web_root | regex_replace('\\/$', '') }}/healthz
            port: api-port
            scheme:  {{ 'HTTP' if kiali_vars.identity.cert_file == "" else 'HTTPS' }}
          initialDelaySeconds: 5
          periodSeconds: 30
        env:
        - name: ACTIVE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
{% for env in kiali_deployment_environment_variables %}
        - name: {{ env }}
          valueFrom:
            secretKeyRef:
              name: {{ kiali_deployment_environment_variables[env].secret_name }}
              key: {{ kiali_deployment_environment_variables[env].secret_key }}
{% endfor %}
        volumeMounts:
        - name: kiali-configuration
          mountPath: "/kiali-configuration"
        - name: kiali-cert
          mountPath: "/kiali-cert"
        - name: kiali-secret
          mountPath: "/kiali-secret"
{% if kiali_vars.deployment.resources|length > 0 %}
        resources:
          {{ kiali_vars.deployment.resources | to_nice_yaml(indent=0) | trim | indent(10) }}
{% else %}
        resources: null
{% endif %}
      volumes:
      - name: kiali-configuration
        configMap:
          name: kiali
      - name: kiali-cert
        secret:
          secretName: istio.kiali-service-account
{% if kiali_vars.identity.cert_file == "" %}
          optional: true
{% endif %}
      - name: kiali-secret
        secret:
          secretName: {{ kiali_vars.deployment.secret_name }}
          optional: true
{% if kiali_vars.deployment.affinity.node|length > 0 or kiali_vars.deployment.affinity.pod|length > 0 or kiali_vars.deployment.affinity.pod_anti|length > 0 %}
      affinity:
{% if kiali_vars.deployment.affinity.node|length > 0 %}
        nodeAffinity:
          {{ kiali_vars.deployment.affinity.node | to_nice_yaml(indent=0) | trim | indent(10) }}
{% else %}
        nodeAffinity: null
{% endif %}
{% if kiali_vars.deployment.affinity.pod|length > 0 %}
        podAffinity:
          {{ kiali_vars.deployment.affinity.pod | to_nice_yaml(indent=0) | trim | indent(10) }}
{% else %}
        podAffinity: null
{% endif %}
{% if kiali_vars.deployment.affinity.pod_anti|length > 0 %}
        podAntiAffinity:
          {{ kiali_vars.deployment.affinity.pod_anti | to_nice_yaml(indent=0) | trim | indent(10) }}
{% else %}
        podAntiAffinity: null
{% endif %}
{% else %}
      affinity: null
{% endif %}
{% if kiali_vars.deployment.tolerations|length > 0 %}
      tolerations:
      {{ kiali_vars.deployment.tolerations | to_nice_yaml(indent=0) | trim | indent(6) }}
{% else %}
      tolerations: null
{% endif %}
{% if kiali_vars.deployment.node_selector|length > 0 %}
      nodeSelector:
        {{ kiali_vars.deployment.node_selector | to_nice_yaml(indent=0) | trim | indent(8) }}
{% else %}
      nodeSelector: null
{% endif %}
