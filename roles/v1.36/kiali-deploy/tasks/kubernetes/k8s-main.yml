- include_tasks: update-status-progress.yml
  vars:
    status_progress_message: "Creating core resources"
  when:
  - is_k8s == True

- name: Create Kiali objects on Kubernetes
  include_tasks: process-resource.yml
  vars:
    process_resource_cluster: "kubernetes"
    role_namespaces: "{{ [ kiali_vars.deployment.namespace ] }}"
  loop:
  - serviceaccount
  - configmap
  - "{{ 'role-viewer' if kiali_vars.deployment.view_only_mode|bool == True else 'role' }}"
  - role-controlplane
  - rolebinding
  - rolebinding-controlplane
  - deployment
  - service
  - "{{ 'hpa' if kiali_vars.deployment.hpa.spec | length > 0 else '' }}"
  loop_control:
    loop_var: process_resource_item
  when:
  - is_k8s == True
  - process_resource_item != ''

- name: Remove HPA if disabled on Kubernetes
  k8s:
    state: absent
    api_version: "{{ kiali_vars.deployment.hpa.api_version }}"
    kind: "HorizontalPodAutoscaler"
    namespace: "{{ kiali_vars.deployment.namespace }}"
    name: "{{ kiali_vars.deployment.instance_name }}"
  when:
  - is_k8s == True
  - kiali_vars.deployment.hpa.spec | length == 0

- name: Create Ingress on Kubernetes if enabled
  include_tasks: process-resource.yml
  vars:
    process_resource_cluster: "kubernetes"
    role_namespace: "{{ kiali_vars.deployment.namespace }}"
  loop:
  - ingress
  loop_control:
    loop_var: process_resource_item
  when:
  - is_k8s == True
  - kiali_vars.deployment.ingress_enabled|bool == True

- name: Delete Ingress on Kubernetes if disabled
  k8s:
    state: absent
    api_version: "networking.k8s.io/{{ 'v1' if (lookup('k8s', kind='Ingress', api_version='networking.k8s.io/v1', errors='ignore') is iterable) else 'v1beta1' }}"
    kind: "Ingress"
    namespace: "{{ kiali_vars.deployment.namespace }}"
    name: "{{ kiali_vars.deployment.instance_name }}"
  when:
  - is_k8s == True
  - kiali_vars.deployment.ingress_enabled|bool == False

- include_tasks: update-status-progress.yml
  vars:
    status_progress_message: "Creating additional roles"
  when:
  - is_k8s == True
  - '"**" not in kiali_vars.deployment.accessible_namespaces'

- name: Create additional Kiali roles on all accessible namespaces on Kubernetes
  vars:
    role_namespaces: "{{ kiali_vars.deployment.accessible_namespaces }}"
  k8s:
    definition: "{{ lookup('template', 'templates/kubernetes/' + ('role-viewer' if kiali_vars.deployment.view_only_mode|bool == True else 'role') + '.yaml') }}"
  when:
  - is_k8s == True
  - '"**" not in kiali_vars.deployment.accessible_namespaces'

- name: Create additional Kiali role bindings on all accessible namespaces on Kubernetes
  vars:
    role_namespaces: "{{ kiali_vars.deployment.accessible_namespaces }}"
  k8s:
    definition: "{{ lookup('template', 'templates/kubernetes/rolebinding.yaml') }}"
  when:
  - is_k8s == True
  - '"**" not in kiali_vars.deployment.accessible_namespaces'
