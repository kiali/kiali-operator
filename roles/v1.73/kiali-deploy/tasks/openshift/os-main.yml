- include_tasks: update-status-progress.yml
  vars:
    status_progress_message: "Creating core resources"
  when:
  - is_openshift == True

- name: Create Kiali objects on OpenShift
  include_tasks: process-resource.yml
  vars:
    role_namespaces: "{{ [ kiali_vars.deployment.namespace ] }}"
    process_resource_templates:
    - "templates/openshift/serviceaccount.yaml"
    - "templates/openshift/configmap.yaml"
    - "templates/openshift/cabundle.yaml"
    - "templates/openshift/{{ 'role-viewer' if ((kiali_vars.deployment.view_only_mode|bool == True) or (kiali_vars.auth.strategy != 'anonymous')) else 'role' }}.yaml"
    - "templates/openshift/role-controlplane.yaml"
    - "templates/openshift/rolebinding.yaml"
    - "templates/openshift/rolebinding-controlplane.yaml"
    - "templates/openshift/deployment.yaml"
    - "templates/openshift/service.yaml"
    - "{{ 'templates/openshift/hpa.yaml' if kiali_vars.deployment.hpa.spec | length > 0 else '' }}"
    - "{{ 'templates/openshift/route.yaml' if kiali_vars.deployment.ingress.enabled|bool == True else '' }}"
  when:
  - is_openshift == True

- name: Remove HPA if disabled on OpenShift
  k8s:
    state: absent
    api_version: "{{ kiali_vars.deployment.hpa.api_version }}"
    kind: "HorizontalPodAutoscaler"
    namespace: "{{ kiali_vars.deployment.namespace }}"
    name: "{{ kiali_vars.deployment.instance_name }}"
  when:
  - is_openshift == True
  - kiali_vars.deployment.hpa.spec | length == 0

- name: Delete Route on OpenShift if disabled
  k8s:
    state: absent
    api_version: "route.openshift.io/v1"
    kind: "Route"
    namespace: "{{ kiali_vars.deployment.namespace }}"
    name: "{{ kiali_vars.deployment.instance_name }}"
  when:
  - is_openshift == True
  - kiali_vars.deployment.ingress.enabled|bool == False

- include_tasks: update-status-progress.yml
  vars:
    status_progress_message: "Creating additional roles"
  when:
  - is_openshift == True
  - kiali_vars.deployment.cluster_wide_access == False

- name: Create additional Kiali roles/bindings on all accessible namespaces on OpenShift
  vars:
    role_namespaces: "{{ kiali_vars.deployment.accessible_namespaces }}"
  k8s:
    template:
    - "templates/openshift/{{ 'role-viewer' if ((kiali_vars.deployment.view_only_mode|bool == True) or (kiali_vars.auth.strategy != 'anonymous')) else 'role' }}.yaml"
    - "templates/openshift/rolebinding.yaml"
  when:
  - is_openshift == True
  - kiali_vars.deployment.cluster_wide_access == False

- include_tasks: update-status-progress.yml
  vars:
    status_progress_message: "Creating OpenShift resources"
  when:
  - is_openshift == True

- name: Get the Kiali Route URL
  include_tasks: openshift/os-get-kiali-route-url.yml
  when:
  - is_openshift == True

- name: Process OpenShift OAuth client
  k8s:
    definition: "{{ lookup('template', 'templates/openshift/oauth.yaml') }}"
  when:
  - is_openshift == True
  - kiali_vars.auth.strategy == "openshift"

- name: Delete all ConsoleLinks for namespaces that are no longer accessible
  k8s:
    state: absent
    definition: |
      {% for namespace in no_longer_accessible_namespaces  %}
      ---
      apiVersion: console.openshift.io/v1
      kind: ConsoleLink
      metadata:
        name: "{{ kiali_vars.deployment.instance_name }}-namespace-{{ namespace }}"
      ...
      {% endfor %}
  when:
  - is_openshift == True
  - no_longer_accessible_namespaces is defined

- name: Process OpenShift Console Links
  k8s:
    definition: "{{ lookup('template', 'templates/openshift/console-links.yaml') }}"
  vars:
    # When accessible_namespaces=**, the kiali.io/member-of label is not set, but maistra.io/member-of are always present
    namespaces: "{{ lookup(k8s_plugin, api_version='v1', kind='Namespace', label_selector=('maistra.io/member-of=' + kiali_vars.istio_namespace)) | default({}) | json_query('[].metadata.name') if '**' in all_accessible_namespaces else all_accessible_namespaces }}"
  when:
  - is_openshift == True
  - openshift_version is version('4.3', '>=')
