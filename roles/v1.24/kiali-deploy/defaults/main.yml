# Defaults for all user-facing Kiali settings. These are documented in kiali_cr.yaml.
#
# Note that these are under the main dictionary group "kiali_defaults".
# The actual vars used by the role are found in the vars/ directory.
# These defaults (the dictionaries under "kiali_defaults") are merged into the vars such that the values
# below (e.g. deployment, server, etc.) are merged in rather than completely replaced by user-supplied values.
#
# If new groups are added to these defaults, you must remember to add the merge code to vars/main.yml.

kiali_defaults:
  installation_tag: ""
  istio_component_namespaces: {}
  istio_namespace: ""
  version: "default"

  additional_display_details:
  - title: "API Documentation"
    annotation: "kiali.io/api-spec"
    icon_annotation: "kiali.io/api-type"

  api:
    namespaces:
      exclude:
      - "istio-operator"
      - "kube.*"
      - "openshift.*"
      - "ibm.*"
      - "kiali-operator"
      #label_selector:

  auth:
    openid:
      api_proxy: ""
      api_proxy_ca_data: ""
      authentication_timeout: 300
      authorization_endpoint: ""
      client_id: ""
      insecure_skip_verify_tls: false
      issuer_uri: ""
      scopes: ["openid", "profile", "email"]
      username_claim: "sub"
    openshift:
      client_id_prefix: "kiali"
    strategy: ""

  deployment:
    accessible_namespaces: ["^((?!(istio-operator|kube.*|openshift.*|ibm.*|kiali-operator)).)*$"]
    #additional_service_yaml:
    affinity:
      node: {}
      pod: {}
      pod_anti: {}
    custom_dashboards:
      excludes: ['']
      includes: ['*']
    image_name: ""
    image_pull_policy: "IfNotPresent"
    image_pull_secrets: []
    image_version: ""
    ingress_enabled: true
    namespace: ""
    node_selector: {}
    #override_ingress_yaml:
    pod_annotations: {}
    priority_class_name: ""
    replicas: 1
    resources: {}
    secret_name: "kiali"
    service_annotations: {}
    #service_type: "NodePort"
    tolerations: []
    verbose_mode: "3"
    version_label: ""
    view_only_mode: false

  extensions:
    threescale:
      adapter_name: "threescale"
      adapter_port: "3333"
      adapter_service: "threescale-istio-adapter"
      enabled: false
      template_name: "threescale-authorization"
    iter_8:
      enabled: false

  external_services:
    custom_dashboards:
      enabled: true
      namespace_label: ""
      prometheus:
        auth:
          ca_file: ""
          insecure_skip_verify: false
          password: ""
          token: ""
          type: "none"
          use_kiali_token: false
          username: ""
        url: ""
    grafana:
      auth:
        ca_file: ""
        insecure_skip_verify: false
        password: ""
        token: ""
        type: "none"
        use_kiali_token: false
        username: ""
      component_status:
        app_label: "grafana"
        is_core: false
        namespace: ""
      dashboards:
      - name: "Istio Service Dashboard"
        variables:
          namespace: "var-namespace"
          service: "var-service"
      - name: "Istio Workload Dashboard"
        variables:
          namespace: "var-namespace"
          workload: "var-workload"
      enabled: true
      in_cluster_url: ""
      url: ""
    istio:
      component_status:
        enabled: true
        components:
        - app_label: "istiod"
          is_core: true
        - app_label: "istio-ingressgateway"
          is_core: true
        - app_label: "istio-egressgateway"
          is_core: false
      istio_identity_domain: "svc.cluster.local"
      istio_injection_annotation: "sidecar.istio.io/inject"
      istio_sidecar_annotation: "sidecar.istio.io/status"
      url_service_version: ""
    prometheus:
      auth:
        ca_file: ""
        insecure_skip_verify: false
        password: ""
        token: ""
        type: "none"
        use_kiali_token: false
        username: ""
      component_status:
        app_label: "prometheus"
        is_core: true
        namespace: ""
      url: ""
    tracing:
      auth:
        ca_file: ""
        insecure_skip_verify: false
        password: ""
        token: ""
        type: "none"
        use_kiali_token: false
        username: ""
      component_status:
        app_label: "jaeger"
        is_core: false
        namespace: ""
      enabled: true
      in_cluster_url: ""
      namespace_selector: true
      url: ""
      whitelist_istio_system: ["jaeger-query", "istio-ingressgateway"]

  health_config:
    rate: []

  identity: {}
    #cert_file:
    #private_key_file:

  istio_labels:
    app_label_name: "app"
    injection_label_name: "istio-injection"
    version_label_name: "version"

  kiali_feature_flags:
    istio_injection_action: true

  kubernetes_config:
    burst: 200
    cache_duration: 300
    cache_enabled: true
    cache_istio_types:
    - "DestinationRule"
    - "Gateway"
    - "ServiceEntry"
    - "VirtualService"
    - "Sidecar"
    - "PeerAuthentication"
    - "RequestAuthentication"
    - "AuthorizationPolicy"

    cache_namespaces:
    - ".*"
    cache_token_namespace_duration: 10
    excluded_workloads:
    - "CronJob"
    - "DeploymentConfig"
    - "Job"
    - "ReplicationController"
    qps: 175

  login_token:
    expiration_seconds: 86400
    signing_key: ""

  server:
    address: ""
    audit_log: true
    cors_allow_all: false
    gzip_enabled: true
    metrics_enabled: true
    metrics_port: 9090
    port: 20001
    web_fqdn: ""
    web_root: ""
    web_schema: ""

# These variables are outside of the kiali_defaults. Their values will be
# auto-detected by the role and are not meant to be set by the user.
# However, for debugging purposes you can change these.

is_k8s: false
is_openshift: false
