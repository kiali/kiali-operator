- include_tasks: update-status-progress.yml
  vars:
    status_progress_message: "Creating core resources"
  when:
  - is_openshift == True

# If it is Removed, the web console is disabled.
# See: https://docs.openshift.com/container-platform/4.13/web_console/disabling-web-console.html
- name: Determine if OpenShift Console is installed and enabled
  vars:
    console_res: "{{ query(k8s_plugin, resource_name='cluster', api_version='operator.openshift.io/v1', kind='Console', errors='ignore') }}"
  set_fact:
    has_openshift_console: "{{ console_res | length > 0 and console_res[0].spec.managementState != 'Removed' }}"
  when:
  - is_openshift == True

- name: Remove HPA if disabled on OpenShift
  k8s:
    state: absent
    api_version: "{{ kiali_vars.deployment.hpa.api_version }}"
    kind: "HorizontalPodAutoscaler"
    namespace: "{{ kiali_vars.deployment.namespace }}"
    name: "{{ kiali_vars.deployment.instance_name }}"
  when:
  - is_openshift == True
  - kiali_vars.deployment.hpa.spec | length == 0

- name: Create Kiali objects on OpenShift
  include_tasks: process-resource.yml
  vars:
    role_namespaces: "{{ [ kiali_vars.deployment.namespace ] }}"
    process_resource_templates:
    - "templates/openshift/serviceaccount.yaml"
    - "templates/openshift/configmap.yaml"
    - "{{ 'templates/openshift/cabundle.yaml' if kiali_vars.deployment.remote_cluster_resources_only|bool == False else '' }}"
    - "templates/openshift/{{ 'role-viewer' if ((kiali_vars.deployment.view_only_mode|bool == True) or (kiali_vars.auth.strategy != 'anonymous')) else 'role' }}.yaml"
    - "templates/openshift/rolebinding.yaml"
    - "{{ 'templates/openshift/clusterrole-oauth.yaml' if kiali_vars.auth.strategy == 'openshift' else '' }}"
    - "{{ 'templates/openshift/clusterrolebinding-oauth.yaml' if kiali_vars.auth.strategy == 'openshift' else '' }}"
    - "{{ 'templates/openshift/deployment.yaml' if kiali_vars.deployment.remote_cluster_resources_only|bool == False else '' }}"
    - "{{ 'templates/openshift/service.yaml' if kiali_vars.deployment.remote_cluster_resources_only|bool == False else '' }}"
    - "{{ 'templates/openshift/hpa.yaml' if ((kiali_vars.deployment.hpa.spec | length > 0) and (kiali_vars.deployment.remote_cluster_resources_only|bool == False)) else '' }}"
    - "{{ 'templates/openshift/route.yaml' if ((kiali_vars.deployment.ingress.enabled|bool == True) and (kiali_vars.deployment.remote_cluster_resources_only|bool == False)) else '' }}"
  when:
  - is_openshift == True

- name: Delete Route on OpenShift if disabled
  k8s:
    state: absent
    api_version: "route.openshift.io/v1"
    kind: "Route"
    namespace: "{{ kiali_vars.deployment.namespace }}"
    name: "{{ kiali_vars.deployment.instance_name }}"
  when:
  - is_openshift == True
  - kiali_vars.deployment.ingress.enabled|bool == False

- include_tasks: update-status-progress.yml
  vars:
    status_progress_message: "Creating additional roles"
  when:
  - is_openshift == True
  - kiali_vars.deployment.cluster_wide_access == False

- name: Create additional Kiali roles/bindings on all namespaces that are accessible on OpenShift
  vars:
    role_namespaces: "{{ discovery_selector_namespaces }}"
  k8s:
    template:
    - "templates/openshift/{{ 'role-viewer' if ((kiali_vars.deployment.view_only_mode|bool == True) or (kiali_vars.auth.strategy != 'anonymous')) else 'role' }}.yaml"
    - "templates/openshift/rolebinding.yaml"
  when:
  - is_openshift == True
  - kiali_vars.deployment.cluster_wide_access == False

- include_tasks: update-status-progress.yml
  vars:
    status_progress_message: "Creating OpenShift resources"
  when:
  - is_openshift == True

- name: Delete OAuthClient on OpenShift if not using auth.strategy openshift
  k8s:
    state: absent
    api_version: "oauth.openshift.io/v1"
    kind: "OAuthClient"
    label_selectors:
    - "app.kubernetes.io/instance = {{ kiali_vars.deployment.instance_name }}"
  when:
  - is_openshift == True
  - kiali_vars.auth.strategy != "openshift"

# For now, when creating remote cluster resources only, we are going to assume there is no way for us to determine what the redirect URIs are
# going to be other than having the user explicitly configure them. So fail immediately if the user did not tell us what redirect URI[s] to use.
# Note that this only comes into play when auth.strategy is "openshift".
- name: Fail if creating remote cluster resources with auth strategy of openshift, but the Kiali redirect URIs are not defined
  fail:
    msg: "Redirect URIs for the Kiali Server OAuthClient are not specified via auth.openshift.redirect_uris; this is required when creating remote cluster resources with auth.strategy of openshift."
  when:
  - kiali_vars.deployment.remote_cluster_resources_only|bool == True
  - kiali_vars.auth.strategy == 'openshift'
  - kiali_vars.auth.openshift.redirect_uris | default([]) | length == 0

# We only need to auto-discover the Kiali route if (a) we know it will exist and (b) we know we need it.
# We know it will exist if we are creating the Kiali Server itself (i.e. remote_cluster_resources_only == False).
# We know we need it for ConsoleLinks (and those are only created when we are creating the Kiali Server itself).
# We know we need it for OAuthClient, too. That is also created when we are creating the Kiali Server itself. But it is also
# created when creating only remote cluster resources - however, in that case, we are going to require the user to tell us
# what redirect URIs to use (see the above fail task to ensure the user does that).
# All of this is to say: we only need to auto-discover the route when we are creating the Kiali Server itself (we do not
# auto-discover the route when we are creating only the remote cluster resources).
# We also don't expect the Route if it was disabled (which also disables other features like OAuthClient -- see https://github.com/kiali/kiali/issues/8023)
- name: Get the Kiali Route URL
  include_tasks: openshift/os-get-kiali-route-url.yml
  when:
  - is_openshift == True
  - kiali_vars.deployment.ingress.enabled|bool == True
  - kiali_vars.deployment.remote_cluster_resources_only|bool == False

- name: Process OpenShift OAuth client
  k8s:
    definition: "{{ lookup('template', 'templates/openshift/oauth.yaml') }}"
  when:
  - is_openshift == True
  - kiali_vars.deployment.ingress.enabled|bool == True
  - kiali_vars.auth.strategy == "openshift"

- name: Delete all ConsoleLinks for namespaces that are no longer accessible
  k8s:
    state: absent
    definition: |
      {% for namespace in namespaces_no_longer_accessible  %}
      ---
      apiVersion: console.openshift.io/v1
      kind: ConsoleLink
      metadata:
        name: "{{ kiali_vars.deployment.instance_name }}-namespace-{{ namespace }}"
      ...
      {% endfor %}
  when:
  - is_openshift == True
  - has_openshift_console is defined
  - has_openshift_console == True
  - namespaces_no_longer_accessible is defined

- name: Process OpenShift Console Links
  k8s:
    definition: "{{ lookup('template', 'templates/openshift/console-links.yaml') }}"
  vars:
    namespaces: "{{ discovery_selector_namespaces }}"
  when:
  - is_openshift == True
  - has_openshift_console is defined
  - has_openshift_console == True
  - kiali_route_url is defined
  - kiali_vars.deployment.remote_cluster_resources_only|bool == False
  - kiali_vars.deployment.cluster_wide_access == False