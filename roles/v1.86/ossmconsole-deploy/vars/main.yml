# These are the actual variables used by the role. You will notice it is
# one big dictionary (key="ossmconsole_vars") whose child dictionaries mimic those
# as defined in defaults/main.yml.
# The child dictionaries below will have values that are a combination of the default values
# (as found in defaults/main.yaml) and user-supplied values.
# Without this magic, a user supplying only one key/value pair in a child dictionary will
# clear out (make undefined) all the rest of the key/value pairs in that child dictionary.
# This is not what we want. We want the rest of the dictionary to keep the defaults,
# thus allowing the user to override only a subset of key/values in a dictionary.
#
# I found this trick at https://groups.google.com/forum/#!topic/Ansible-project/pGbRYZyqxZ4
# I tweeked that solution a little bit because I did not want to require the user to supply
# everything under a main "ossmconsole_vars" dictionary.

ossmconsole_vars:
  version: "{{ version | default(ossmconsole_defaults.version) }}"

  deployment: |
    {%- if deployment is defined and deployment is iterable -%}
    {{ ossmconsole_defaults.deployment | combine((deployment | stripnone), recursive=True) }}
    {%- else -%}
    {{ ossmconsole_defaults.deployment }}
    {%- endif -%}

  kiali: |
    {%- if kiali is defined and kiali is iterable -%}
    {{ ossmconsole_defaults.kiali | combine((kiali | stripnone), recursive=True) }}
    {%- else -%}
    {{ ossmconsole_defaults.kiali }}
    {%- endif -%}
