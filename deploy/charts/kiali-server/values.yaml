nameOverride: ""
fullnameOverride: ""

# This is required for "openshift" auth strategy.
# You have to know ahead of time what your Route URL will be because
# right now the helm chart can't figure this out at runtime (it would
# need to wait for the Kiali Route to be deployed and for OpenShift
# to start it up). If someone knows how to update this helm chart to
# do this, a PR would be welcome.
kiali_route_url: ""

#
# Settings that mimic the Kiali CR which are placed in the ConfigMap
#

installation_tag: ""
istio_namespace: "" # default is where Kiali is installed

additional_display_details:
- title: "API Documentation"
  annotation: "kiali.io/api-spec"
  icon_annotation: "kiali.io/api-type"

api:
  namespaces:
    exclude:
    - "istio-operator"
    - "kube.*"
    - "openshift.*"
    - "ibm.*"
    - "kiali-operator"
    #label_selector:

auth:
  openid:
    authentication_timeout: 300
    authorization_endpoint: ""
    client_id: ""
    insecure_skip_verify_tls: false
    issuer_uri: ""
    scopes: ["openid", "profile", "email"]
    username_claim: "sub"
  openshift:
    client_id_prefix: "kiali-server"
  strategy: ""

deployment:
  # This only limits what Kiali will attempt to see, but Kiali Service Account has permissions to see everything.
  # For more control over what the Kial Service Account can see, use the Kiali Operator
  accessible_namespaces:
  - "**"
  additional_service_yaml: {}
  affinity:
    node: {}
    pod: {}
    pod_anti: {}
  custom_dashboards:
    excludes: ['']
    includes: ['*']
  image_name: quay.io/kiali/kiali
  image_pull_policy: "Always"
  image_pull_secrets: []
  image_version: ${HELM_IMAGE_TAG}
  ingress_enabled: true
  node_selector: {}
  override_ingress_yaml:
    metadata: {}
  pod_annotations: {}
  priority_class_name: ""
  replicas: 1
  resources: {}
  secret_name: "kiali"
  service_annotations: {}
  service_type: ""
  tolerations: []
  verbose_mode: "3"
  version_label: ${HELM_IMAGE_TAG}
  view_only_mode: false

extensions:
  threescale:
    adapter_name: "threescale"
    adapter_port: "3333"
    adapter_service: "threescale-istio-adapter"
    enabled: false
    template_name: "threescale-authorization"
  iter_8:
    enabled: false

external_services:
  grafana:
    auth:
      ca_file: ""
      insecure_skip_verify: false
      password: ""
      token: ""
      type: "none"
      use_kiali_token: false
      username: ""
    dashboards:
    - name: "Istio Service Dashboard"
      variables:
        namespace: "var-namespace"
        service: "var-service"
    - name: "Istio Workload Dashboard"
      variables:
        namespace: "var-namespace"
        workload: "var-workload"
    enabled: true
    in_cluster_url: "http://grafana:3000"
    url: ""
  istio:
    istio_identity_domain: "svc.cluster.local"
    istio_sidecar_annotation: "sidecar.istio.io/status"
    istio_status_enabled: true
    url_service_version: "http://istiod:15014/version"
  prometheus:
    auth:
      ca_file: ""
      insecure_skip_verify: false
      password: ""
      token: ""
      type: "none"
      use_kiali_token: false
      username: ""
    custom_metrics_url: "http://prometheus:9090"
    url: "http://prometheus:9090"
  tracing:
    auth:
      ca_file: ""
      insecure_skip_verify: false
      password: ""
      token: ""
      type: "none"
      use_kiali_token: false
      username: ""
    enabled: true
    in_cluster_url: "http://tracing/jaeger"
    namespace_selector: true
    url: ""
    whitelist_istio_system: ["jaeger-query", "istio-ingressgateway"]

identity: {}
  #cert_file:
  #private_key_file:

istio_labels:
  app_label_name: "app"
  version_label_name: "version"

kubernetes_config:
  burst: 200
  cache_duration: 300
  cache_enabled: true
  cache_istio_types:
  - "DestinationRule"
  - "Gateway"
  - "ServiceEntry"
  - "VirtualService"
  cache_namespaces:
  - ".*"
  cache_token_namespace_duration: 10
  excluded_workloads:
  - "CronJob"
  - "DeploymentConfig"
  - "Job"
  - "ReplicationController"
  qps: 175

login_token:
  expiration_seconds: 86400
  signing_key: ""

server:
  address: ""
  audit_log: true
  cors_allow_all: false
  gzip_enabled: true
  metrics_enabled: true
  metrics_port: 9090
  port: 20001
  web_fqdn: ""
  web_root: ""
  web_schema: ""
