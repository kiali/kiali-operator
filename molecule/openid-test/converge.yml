---
- name: Tests
  hosts: localhost
  connection: local
  vars:
    custom_resource: "{{ lookup('template', cr_file_path) | from_yaml }}"
  tasks:

  # =============================================================================
  # MAKE SURE KIALI IS INITIALIZED AND READY TO TEST
  # =============================================================================

  - import_tasks: ../common/tasks.yml

  - name: "Override kiali_base_url for OpenID test (requires nip.io for container accessibility)"
    set_fact:
      kiali_base_url: "http://{{ nip_io_base_url }}:32080/kiali"

  - import_tasks: ../asserts/pod_asserts.yml
  - import_tasks: ../common/wait_for_kiali_running.yml

  - name: "Create OIDC client secret for Kiali"
    kubernetes.core.k8s:
      api_version: v1
      kind: Secret
      name: kiali-oidc
      namespace: "{{ kiali.install_namespace }}"
      definition:
        type: Opaque
        data:
          oidc-secret: "{{ 'doNotTell' | b64encode }}"

  - import_tasks: ../common/set_kiali_cr.yml
    vars:
      new_kiali_cr: "{{ kiali_cr | combine({'spec': {'deployment': {'secret_name': 'kiali-oidc'}}}, recursive=True) }}"
  - import_tasks: ../common/wait_for_kiali_cr_changes.yml
  - import_tasks: ../common/wait_for_kiali_running.yml

  - name: "Make sure the test set the strategy to openid"
    assert:
      that:
      - kiali_configmap.auth.strategy == "openid"

  - name: "Assert that we can access Kiali console login screen that does not need authentication"
    uri:
      url: "{{ kiali_base_url }}/console"
      validate_certs: false

  - name: "Try to access Kiali api endpoint that requires authentication (should return error - we did not login yet)"
    uri:
      url: "{{ kiali_base_url }}/api/namespaces"
      status_code: 401
      validate_certs: false

  - name: "Attempt HTTP Basic Auth against OpenID endpoint (should be rejected because Basic Auth is not supported for OpenID)"
    uri:
      url: "{{ kiali_base_url }}/api/authenticate"
      user: "{{ openid.username }}"
      password: "{{ openid.password }}"
      status_code: 500
      return_content: yes
      validate_certs: false

  - name: "DEBUG: Show test environment details"
    debug:
      msg:
        - "Kiali base URL: {{ kiali_base_url }}"
        - "OpenID username: {{ openid.username }}"
        - "Client ID: {{ openid.client_id }}"
        - "MOLECULE_MINIKUBE_IP: {{ lookup('env', 'MOLECULE_MINIKUBE_IP') }}"
        - "Expected Hydra public endpoint: https://{{ nip_io_base_url }}:{{ hydra.public_port }}"
        - "Expected Hydra admin endpoint: https://{{ nip_io_base_url }}:{{ hydra.admin_port }}"

  # =============================================================================
  # OAUTH2 AUTHENTICATION TEST
  # =============================================================================

  - name: "=== OAUTH2 AUTHENTICATION TEST ==="
    debug:
      msg: "Testing OAuth2 authentication flow with multi-audience capable confidential client (kiali-app)"

  - name: "OAuth2: Run OIDC handshaking test"
    include_tasks: oidc-handshaking.yml

  # =============================================================================
  # MULTI-AUDIENCE CONFIGURATION VALIDATION
  # =============================================================================

  - name: "=== MULTI-AUDIENCE CONFIGURATION VALIDATION ==="
    debug:
      msg: "Validating that kiali-app client supports multiple audiences"

  - name: "Config: Verify kiali-app client has multi-audience configuration"
    uri:
      url: "https://{{ nip_io_base_url }}:{{ hydra.admin_port }}/admin/clients/{{ openid.client_id }}"
      method: GET
      return_content: yes
      validate_certs: false
    register: kiali_client_config

  - name: "Config: Assert kiali-app client supports multiple audiences, kiali-app being one of them"
    assert:
      that:
        - "kiali_client_config.json.audience is defined"
        - "kiali_client_config.json.audience | length > 1"
        - "'kiali-app' in kiali_client_config.json.audience"
      fail_msg: "FAILED: kiali-app confidential client does not have expected multi-audience configuration. This is required for proper OpenID Connect integration."
      success_msg: "SUCCESS: Multi-audience OAuth2 integration validated - kiali-app confidential client supports multiple audiences as expected."