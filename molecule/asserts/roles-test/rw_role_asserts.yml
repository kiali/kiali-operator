- name: Get roles
  vars:
    instance_name: "{{ kiali.instance_name | default('kiali') }}"
  k8s_info:
   api_version: rbac.authorization.k8s.io/v1
   kind: Role
   namespace: "{{ item[0] }}"
   name: "{{ item[1] }}"
  register: roles
  with_nested:
  - "{{ kiali.accessible_namespaces }}"
  - "{{ instance_name }}"

- name: Assert that namespaces have the correct roles
  assert:
    that: "{{ item.resources | length == 1 }}"
  with_items:
  - "{{ roles.results }}"

- name: Get role binding
  vars:
    instance_name: "{{ kiali.instance_name | default('kiali') }}"
  k8s_info:
   api_version: rbac.authorization.k8s.io/v1
   kind: RoleBinding
   namespace: "{{ item[0] }}"
   name: "{{ item[1] }}"
  register: rolebindings
  with_nested:
  - "{{ kiali.accessible_namespaces }}"
  - "{{ instance_name }}"

- name: Assert the role binding provides the read-write role
  vars:
    instance_name: "{{ kiali.instance_name | default('kiali') }}"
  assert:
    that:
    - "{{ item.resources[0] | default({}) | json_query('roleRef.name') == instance_name }}"
    fail_msg: "The kiali role binding did not have the read-write roleref {{ instance_name }}"
  with_items:
  - "{{ rolebindings.results }}"
