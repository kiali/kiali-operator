- name: Tests
  hosts: localhost
  connection: local
  collections:
  - kubernetes.core
  vars:
    custom_resource: "{{ lookup('template', cr_file_path) | from_yaml }}"
  tasks:
  - import_tasks: ../common/tasks.yml
  - import_tasks: ../asserts/pod_asserts.yml
  - import_tasks: ../asserts/accessible_namespaces_contains.yml
    vars:
      namespace_list: [ '**' ]
  - name: Make sure label_selector is not set since its default is nil when accessible namespaces is **
    assert:
      that:
      - kiali_configmap.api.namespaces.label_selector is not defined

  # change to accessible_namespaces to a fixed list of namespaces
  - k8s:
      state: present
      definition:
        apiVersion: v1
        kind: Namespace
        metadata:
          name: kialitestns
          labels:
            customLabel: test
  - k8s:
      state: present
      api_version: v1
      kind: Namespace
      name: kialitestns2
  - k8s:
      state: present
      api_version: v1
      kind: Namespace
      name: kialianothertestns
  - import_tasks: ../common/set_accessible_namespaces_to_list.yml
    vars:
      namespace_list: [ "{{ istio.control_plane_namespace }}", 'kialitestns', 'kialianother.*' ]
  - import_tasks: ../common/wait_for_kiali_cr_changes.yml
  - import_tasks: ../common/wait_for_kiali_running.yml
  - import_tasks: ../common/tasks.yml
  - import_tasks: ../asserts/pod_asserts.yml
  - import_tasks: ../asserts/accessible_namespaces_equals.yml
    vars:
      namespace_list: [ "{{ istio.control_plane_namespace }}", 'kialitestns', 'kialianothertestns' ]
  - name: "Make sure label_selector is set properly"
    assert:
      that:
      - kiali_configmap.api.namespaces.label_selector == "kiali.io/member-of={{ istio.control_plane_namespace }}"

  # TODO kubernetes.core.k8s behaves oddly - query doesn't return a list, but should; lookup returns a list but shouldn't.
  #      For now, just use lookup since it returns the list which is what we want
  - name: Make sure the new label exists, but didn't overwrite any existing labels
    vars:
      namespacesWithCustomLabel: "{{ lookup('kubernetes.core.k8s', kind='Namespace', label_selector='customLabel=test') }}"
      namespacesWithKialiLabel: "{{ lookup('kubernetes.core.k8s', kind='Namespace', label_selector=kiali_configmap.api.namespaces.label_selector) }}"
    assert:
      that:
      - namespacesWithCustomLabel | length == 1
      - namespacesWithCustomLabel[0].metadata.name == "kialitestns"
      - namespacesWithKialiLabel | length == 3

  - k8s:
      state: absent
      api_version: v1
      kind: Namespace
      name: kialitestns
  - k8s:
      state: absent
      api_version: v1
      kind: Namespace
      name: kialitestns2
  - k8s:
      state: absent
      api_version: v1
      kind: Namespace
      name: kialianothertestns

  # change to accessible_namespaces back to **
  - import_tasks: ../common/set_accessible_namespaces_to_all.yml
  - import_tasks: ../common/wait_for_kiali_cr_changes.yml
  - import_tasks: ../common/wait_for_kiali_running.yml
  - import_tasks: ../common/tasks.yml
  - import_tasks: ../asserts/pod_asserts.yml
  - import_tasks: ../asserts/accessible_namespaces_contains.yml
    vars:
      namespace_list: [ '**' ]
  - name: Make sure label_selector is not set since its default is nil when accessible namespaces is **
    assert:
      that:
      - kiali_configmap.api.namespaces.label_selector is not defined
