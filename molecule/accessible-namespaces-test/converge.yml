- name: Tests
  hosts: localhost
  connection: local
  collections:
  - kubernetes.core
  vars:
    custom_resource: "{{ lookup('template', cr_file_path) | from_yaml }}"
  tasks:
  - include_tasks: ../common/tasks.yml
  - include_tasks: ../asserts/pod_asserts.yml
  - include_tasks: ../asserts/accessible_namespaces_contains.yml
    vars:
      namespace_list: [ '**' ]
  - name: Make sure label_selector_include is not set since its default is nil when accessible namespaces is **
    assert:
      that:
      - kiali_configmap.api.namespaces.label_selector_include is not defined

  - debug: msg="test to make sure the default AN=** behavior works (default include/exclude filters are in effect)"
  - include_tasks: ../asserts/assert-api-namespaces-result.yml
    vars:
      min_namespaces_expected: 4
      namespaces_expected:
      - "{{ istio.control_plane_namespace }}"
      - kialitestns
      - kialitestns2
      - kialianothertestns
      namespaces_not_expected:
      - kiali-operator

  - debug: msg="test that include filter works when AN=**; also tests exclude filter"
  - include_tasks: ./set-api-namespaces.yml
    vars:
      # include kialitest* and kialianother* but we exclude kialianother* and exclude takes precedence.
      # Also, trying to exclude the control plane namespace is ignored - the control plane namespace is always returned.
      # So this will return the two kialitest* namespaces and the control plane namespace.
      api_namespaces:
        include: [ "kialitest.*", "kialianother.*" ]
        exclude: [ "{{ istio.control_plane_namespace }}", "kialianother.*" ]
        label_selector_include: null
        label_selector_exclude: null

  - include_tasks: ../asserts/assert-api-namespaces-result.yml
    vars:
      min_namespaces_expected: 3
      max_namespaces_expected: 3
      namespaces_expected:
      - "{{ istio.control_plane_namespace }}"
      - kialitestns
      - kialitestns2

  - debug: msg="test both exclude filters (both exclude list and label selector) works"
  - include_tasks: ./set-api-namespaces.yml
    vars:
      api_namespaces:
        include: [ "kialitest.*", "kialianother.*" ]
        exclude: [ "kialianother.*" ]
        label_selector_include: null
        label_selector_exclude: "customLabel=test"

  - include_tasks: ../asserts/assert-api-namespaces-result.yml
    vars:
      min_namespaces_expected: 2
      max_namespaces_expected: 2
      namespaces_expected:
      - "{{ istio.control_plane_namespace }}"
      - kialitestns2

  - debug: msg="test include label selector works when AN=**"
  - include_tasks: ./set-api-namespaces.yml
    vars:
      api_namespaces:
        include: ["{{ istio.control_plane_namespace }}"]
        exclude: null
        label_selector_include: "customLabel=test"
        label_selector_exclude: null

  - include_tasks: ../asserts/assert-api-namespaces-result.yml
    vars:
      min_namespaces_expected: 2
      max_namespaces_expected: 2
      namespaces_expected:
      - "{{ istio.control_plane_namespace }}"
      - kialitestns

  - debug: msg="reset the api.namespaces so it goes back to all defaults"
  - include_tasks: ./set-api-namespaces.yml
    vars:
      api_namespaces:
        include: null
        exclude: null
        label_selector_include: null
        label_selector_exclude: null

  - include_tasks: ../asserts/assert-api-namespaces-result.yml
    vars:
      min_namespaces_expected: 4
      namespaces_expected:
      - "{{ istio.control_plane_namespace }}"
      - kialitestns
      - kialitestns2
      - kialianothertestns
      namespaces_not_expected:
      - kiali-operator

  - debug: msg="change to accessible_namespaces to a fixed list of namespaces"
  - include_tasks: ../common/set_accessible_namespaces_to_list.yml
    vars:
      namespace_list: [ "{{ istio.control_plane_namespace }}", 'kialitestns', 'kialianother.*' ]
  - include_tasks: ../common/wait_for_kiali_cr_changes.yml
  - include_tasks: ../common/wait_for_kiali_running.yml
  - include_tasks: ../common/tasks.yml
  - include_tasks: ../asserts/pod_asserts.yml
  - include_tasks: ../asserts/accessible_namespaces_equals.yml
    vars:
      namespace_list: [ "{{ istio.control_plane_namespace }}", 'kialitestns', 'kialianothertestns' ]
  - name: "Make sure label_selector_include is set properly"
    assert:
      that:
      - kiali_configmap.api.namespaces.label_selector_include == "kiali.io/member-of={{ istio.control_plane_namespace }}"

  - name: Make sure the new label exists, but didn't overwrite any existing labels
    vars:
      # Use query - it is the only way to ensure a list is returned; for some reason, lookup/wantList=true is not working
      namespacesWithCustomLabel: "{{ query('kubernetes.core.k8s', kind='Namespace', label_selector='customLabel=test') }}"
      namespacesWithKialiLabel: "{{ query('kubernetes.core.k8s', kind='Namespace', label_selector=kiali_configmap.api.namespaces.label_selector_include) }}"
    assert:
      that:
      - namespacesWithCustomLabel | length == 1
      - namespacesWithCustomLabel[0].metadata.name == "kialitestns"
      - namespacesWithKialiLabel | length == 3

  - debug: msg="test the normal accessible namespaces (without custom include/exclude filters defined)"
  - include_tasks: ../asserts/assert-api-namespaces-result.yml
    vars:
      min_namespaces_expected: 3
      max_namespaces_expected: 3
      namespaces_expected:
      - "{{ istio.control_plane_namespace }}"
      - kialitestns
      - kialianothertestns

  - debug: msg="test to show include is ignored when AN is not ** but exclude filters are still applied"
  - include_tasks: ./set-api-namespaces.yml
    vars:
      api_namespaces:
        include: [ ".*" ]
        exclude: [ "kialianother.*" ]
        label_selector_include: null
        label_selector_exclude: "customLabel=test"

  - include_tasks: ../asserts/assert-api-namespaces-result.yml
    vars:
      min_namespaces_expected: 1
      max_namespaces_expected: 1
      namespaces_expected:
      - "{{ istio.control_plane_namespace }}"

  # change to accessible_namespaces back to **
  - include_tasks: ../common/set_accessible_namespaces_to_all.yml
  - include_tasks: ../common/wait_for_kiali_cr_changes.yml
  - include_tasks: ../common/wait_for_kiali_running.yml
  - include_tasks: ../common/tasks.yml
  - include_tasks: ../asserts/pod_asserts.yml
  - include_tasks: ../asserts/accessible_namespaces_contains.yml
    vars:
      namespace_list: [ '**' ]
  - name: Make sure label_selector_include is not set since its default is nil when accessible namespaces is **
    assert:
      that:
      - kiali_configmap.api.namespaces.label_selector_include is not defined
