- name: Tests
  hosts: localhost
  connection: local
  collections:
  - kubernetes.core
  vars:
    custom_resource: "{{ lookup('template', cr_file_path) | from_yaml }}"
  tasks:
  - include_tasks: ../common/tasks.yml
  - include_tasks: ../asserts/pod_asserts.yml
  # ASSERT CWA=TRUE
  - include_tasks: ../asserts/accessible_namespaces_contains.yml
    vars:
      namespace_list: []

  - debug: msg="test to make sure cluster-wide-access is True"
  - assert:
      that:
      - kiali_configmap.deployment.cluster_wide_access == True

  - debug: msg="assert that we have clusterroles since we have been given cluster wide access"
  - include_tasks: ../asserts/roles-test/rw_clusterrole_asserts.yml
  - include_tasks: ../asserts/roles-test/none_role_asserts.yml
    vars:
      role_namespaces_to_test:
      - "{{ istio.control_plane_namespace }}"
      - cluster-wide-access-test-1
      - cluster-wide-access-test-2
      - cluster-wide-access-test-x

  - debug: msg="The server should return all namespaces"
  - include_tasks: ../asserts/assert-api-namespaces-result.yml
    vars:
      min_namespaces_expected: 4
      namespaces_expected:
      - "{{ istio.control_plane_namespace }}"
      - cluster-wide-access-test-1
      - cluster-wide-access-test-2
      - cluster-wide-access-test-x

  # SET discovery selectors=[istio-system, cluster-wide-access-test-1, cluster-wide-access-test-x]
  - debug: msg="change accessible namespaces to a fixed list of namespaces but keep cluster-wide-access (set to True)"
  - include_tasks: ../common/set_discovery_selectors_to_list.yml
    vars:
      new_cluster_wide_access: true
      discovery_selectors:
      - matchLabels:
          kubernetes.io/metadata.name: "{{ istio.control_plane_namespace}}"
      - matchLabels:
          kubernetes.io/metadata.name: "cluster-wide-access-test-1"
      - matchLabels:
          kubernetes.io/metadata.name: "cluster-wide-access-test-x"
  - include_tasks: ../common/wait_for_kiali_cr_changes.yml
  - include_tasks: ../common/wait_for_kiali_running.yml
  - include_tasks: ../common/tasks.yml
  - include_tasks: ../asserts/pod_asserts.yml
  - name: CWA is true so there should be no labels on any namespaces
    include_tasks: ../asserts/accessible_namespaces_contains.yml
    vars:
      namespace_list: []

  - debug: msg="test the normal accessible namespaces"
  - name: "Even though discovery selectors are set, cluster wide access should still be True because we explicitly asked for it"
    assert:
      that:
      - kiali_configmap.deployment.cluster_wide_access == True

  - debug: msg="assert that we have clusterroles since we have been given cluster wide access"
  - include_tasks: ../asserts/roles-test/rw_clusterrole_asserts.yml
  - include_tasks: ../asserts/roles-test/none_role_asserts.yml
    vars:
      role_namespaces_to_test:
      - "{{ istio.control_plane_namespace }}"
      - cluster-wide-access-test-1
      - cluster-wide-access-test-2
      - cluster-wide-access-test-x

  - debug: msg="the server should only return the discovery selector namespaces (istio-system, cluster-wide-access-test-1, cluster-wide-access-test-x)"
  - include_tasks: ../asserts/assert-api-namespaces-result.yml
    vars:
      min_namespaces_expected: 3
      max_namespaces_expected: 3
      namespaces_expected:
      - "{{ istio.control_plane_namespace }}"
      - cluster-wide-access-test-1
      - cluster-wide-access-test-x
      namespaces_not_expected:
      - cluster-wide-access-test-2

  # change Istio ConfigMap to use discoverySelectors
  # matchLabels selects the namespace "cluster-wide-access-test-1"
  # matchExpressions selects the namespace "cluster-wide-access-test-2"
  # WE DO THIS TO CONFIRM KIALI OPERATOR WILL IGNORE THESE DISCOVERY SELECTORS
  - include_tasks: ./set-istio-configmap-discovery-selectors.yml
    vars:
      discovery_selectors:
      - matchLabels:
          discoverySelectorLabel1: test

  - debug: msg="remove our discovery selectors (the server will show us all namespaces; Istio discoverySelectors are ignored)"
  # We will still have cluster-wide-access
  - include_tasks: ../common/set_discovery_selectors_to_all.yml
  - include_tasks: ../common/wait_for_kiali_cr_changes.yml
  - include_tasks: ../common/wait_for_kiali_running.yml
  - include_tasks: ../common/tasks.yml
  - include_tasks: ../asserts/pod_asserts.yml
  - include_tasks: ../asserts/accessible_namespaces_contains.yml
    vars:
      namespace_list: []
  - assert:
      that:
      - kiali_configmap.deployment.cluster_wide_access == True

  - debug: msg="the server should return all namespaces; Istio discoverySelectors are ignored"
  - include_tasks: ../asserts/assert-api-namespaces-result.yml
    vars:
      min_namespaces_expected: 4
      namespaces_expected:
      - "{{ istio.control_plane_namespace }}"
      - cluster-wide-access-test-1
      - cluster-wide-access-test-2
      - cluster-wide-access-test-x

  - debug: msg="assert that we have clusterroles since we have been given cluster wide access"
  - include_tasks: ../asserts/roles-test/rw_clusterrole_asserts.yml
  - include_tasks: ../asserts/roles-test/none_role_asserts.yml
    vars:
      role_namespaces_to_test:
      - "{{ istio.control_plane_namespace }}"
      - cluster-wide-access-test-1
      - cluster-wide-access-test-2
      - cluster-wide-access-test-x

  - debug: msg="Turn off cluster wide access and set our discovery selectors to [istio-system, cluster-wide-access-test-1]"
  - include_tasks: ../common/set_discovery_selectors_to_list.yml
    vars:
      new_cluster_wide_access: false
      discovery_selectors:
      - matchLabels:
          kubernetes.io/metadata.name: "{{ istio.control_plane_namespace}}"
      - matchLabels:
          kubernetes.io/metadata.name: "cluster-wide-access-test-1"
  - include_tasks: ../common/wait_for_kiali_cr_changes.yml
  - include_tasks: ../common/wait_for_kiali_running.yml
  - include_tasks: ../common/tasks.yml
  - include_tasks: ../asserts/pod_asserts.yml
  - include_tasks: ../asserts/accessible_namespaces_contains.yml
    vars:
      namespace_list:
      - "{{ istio.control_plane_namespace }}"
      - 'cluster-wide-access-test-1'
  - assert:
      that:
      - kiali_configmap.deployment.cluster_wide_access == False

  - debug: msg="assert that we have roles since we have NOT been given cluster wide access"
  - include_tasks: ../asserts/roles-test/rw_role_asserts.yml
    vars:
      role_namespaces_to_test:
      - "{{ istio.control_plane_namespace }}"
      - cluster-wide-access-test-1
  - include_tasks: ../asserts/roles-test/none_clusterrole_asserts.yml

  - debug: msg="the server should only return those namespaces filtered by our discoverySelectors (Kiali ignores Istio) - the roles still let us see them"
  - include_tasks: ../asserts/assert-api-namespaces-result.yml
    vars:
      min_namespaces_expected: 2
      max_namespaces_expected: 2
      namespaces_expected:
      - "{{ istio.control_plane_namespace }}"
      - cluster-wide-access-test-1
      namespaces_not_expected:
      - cluster-wide-access-test-2
      - cluster-wide-access-test-x

  - name: Remove the Istio discovery selectors
    include_tasks: ./set-istio-configmap-discovery-selectors.yml
    vars:
      discovery_selectors: []

  - name: Pause for a few seconds to ensure the server gets notified of the change to the Istio ConfigMap
    pause:
      seconds: 25

  - debug: msg="We do not have Istio discoverySelectors, but it doesn't matter. We should still see only Kiali discovery selector namespaces (istio-system, cluster-wide-access-test-1)"
  - include_tasks: ../asserts/assert-api-namespaces-result.yml
    vars:
      min_namespaces_expected: 2
      max_namespaces_expected: 2
      namespaces_expected:
      - "{{ istio.control_plane_namespace }}"
      - cluster-wide-access-test-1
      namespaces_not_expected:
      - cluster-wide-access-test-2
      - cluster-wide-access-test-x

  - debug: msg="We have discovery selectors and CWA=false. Now let's set CWA=true and see the roles get removed and cluster roles added"
  - include_tasks: ../common/set_kiali_cr.yml
    vars:
      new_kiali_cr: "{{ kiali_cr_list.resources[0] | combine({'spec': {'deployment': {'cluster_wide_access': True }}}, recursive=True) }}"
  - include_tasks: ../common/wait_for_kiali_cr_changes.yml
  - include_tasks: ../common/wait_for_kiali_running.yml
  - include_tasks: ../common/tasks.yml
  - include_tasks: ../asserts/pod_asserts.yml

  - include_tasks: ../asserts/roles-test/rw_clusterrole_asserts.yml
  - include_tasks: ../asserts/roles-test/none_role_asserts.yml
    vars:
      role_namespaces_to_test:
      - "{{ istio.control_plane_namespace }}"
      - cluster-wide-access-test-1
      - cluster-wide-access-test-2
      - cluster-wide-access-test-x

  - debug: msg="We have discovery selectors and CWA=true. Now let's set CWA back to false and see the roles get added and cluster roles removed"
  - include_tasks: ../common/set_kiali_cr.yml
    vars:
      new_kiali_cr: "{{ kiali_cr_list.resources[0] | combine({'spec': {'deployment': {'cluster_wide_access': False }}}, recursive=True) }}"
  - include_tasks: ../common/wait_for_kiali_cr_changes.yml
  - include_tasks: ../common/wait_for_kiali_running.yml
  - include_tasks: ../common/tasks.yml
  - include_tasks: ../asserts/pod_asserts.yml

  - include_tasks: ../asserts/roles-test/rw_role_asserts.yml
    vars:
      role_namespaces_to_test:
      - "{{ istio.control_plane_namespace }}"
      - cluster-wide-access-test-1
  - include_tasks: ../asserts/roles-test/none_clusterrole_asserts.yml

  - debug: msg="remove discovery selectors but keep CWA=true and see that the roles have been removed and we are back to using cluster-wide-access and clusterroles"
  - include_tasks: ../common/set_discovery_selectors_to_all.yml
  - include_tasks: ../common/wait_for_kiali_cr_changes.yml
  - include_tasks: ../common/wait_for_kiali_running.yml
  - include_tasks: ../common/tasks.yml
  - include_tasks: ../asserts/pod_asserts.yml
  - include_tasks: ../asserts/accessible_namespaces_contains.yml
    vars:
      namespace_list: []

  - debug: msg="test to make sure we are back to cluster-wide-access is True"
  - assert:
      that:
      - kiali_configmap.deployment.cluster_wide_access == True

  - include_tasks: ../asserts/roles-test/rw_clusterrole_asserts.yml
  - include_tasks: ../asserts/roles-test/none_role_asserts.yml
    vars:
      role_namespaces_to_test:
      - "{{ istio.control_plane_namespace }}"
      - cluster-wide-access-test-1
      - cluster-wide-access-test-2
      - cluster-wide-access-test-x
